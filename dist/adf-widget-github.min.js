!function(e,t){"use strict";function a(e){var t={reload:!0,category:"GitHub",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/github/src/edit.html"}},a=angular.extend({resolve:{commits:["github","config",function(e,t){if(t.path)return e.getCommits(t)}]}},t);e.widget("githubHistory",angular.extend({title:"Github History",description:"Display the commit history of a GitHub project as chart",controller:"GithubHistoryController",templateUrl:"{widgetsPath}/github/src/line-chart.html"},a)).widget("githubAuthor",angular.extend({title:"Github Author",description:"Displays the commits per author as pie chart",controller:"GithubAuthorController",templateUrl:"{widgetsPath}/github/src/pie-chart.html"},a)).widget("githubCommits",angular.extend({title:"Github Commits",description:"Displays the commits as list",controller:"GithubCommitsController",templateUrl:"{widgetsPath}/github/src/commits.html"},a)).widget("githubIssues",angular.extend({title:"Github Issues",description:"Displays issues as list of a GitHub project",controller:"GithubIssuesController",templateUrl:"{widgetsPath}/github/src/issues.html",resolve:{issues:function(e,t){if(t.path)return e.getIssues(t)}}},t)).widget("githubUserEvents",{title:"Github User Events",description:"Display events of a certain user.",category:"GitHub",controller:"GithubEventsController",controllerAs:"vm",templateUrl:"{widgetsPath}/github/src/events.user.html",reload:!0,edit:{templateUrl:"{widgetsPath}/github/src/events.user.edit.html"},resolve:{events:["github","config",function(e,t){if(t.user)return e.getUserEvents(t)}]}}).widget("githubOrganisationEvents",{title:"Github Organisation Events",description:"Display events of a public organisation.",category:"GitHub",controller:"GithubEventsController",controllerAs:"vm",templateUrl:"{widgetsPath}/github/src/events.org.html",reload:!0,edit:{templateUrl:"{widgetsPath}/github/src/events.org.edit.html"},resolve:{events:["github","config",function(e,t){if(t.org)return e.getOrgaEvents(t)}]}}).widget("githubRepoEvents",{title:"Github Repository Events",description:"Display events of a certain repository.",category:"GitHub",controller:"GithubEventsController",controllerAs:"vm",templateUrl:"{widgetsPath}/github/src/events.repo.html",reload:!0,edit:{templateUrl:"{widgetsPath}/github/src/events.repo.edit.html"},resolve:{events:["github","config",function(e,t){if(t.path)return e.getRepoEvents(t)}]}})}function i(e,t,a){function i(e){return u(m("issues",e))}function s(e){return u(m("commits",e))}function r(e){return u(c("events",e)).then(n)}function o(e){return u(d("events",e)).then(n)}function l(e){return u(m("events",e)).then(n)}function n(e){for(var t=0;t<e.length;t++)if(e[t].userImage=e[t].actor.avatar_url,e[t].userUrl="https://github.com/"+e[t].actor.login,e[t].repoName=e[t].repo.name,e[t].repoUrl="https://github.com/"+e[t].repo.name,"PullRequestEvent"===e[t].type)"closed"===e[t].payload.action?e[t].message="closed pull request "+e[t].repoName+"#"+e[t].payload.number:"opened"===e[t].payload.action&&(e[t].message="opened pull request "+e[t].repoName+"#"+e[t].payload.number),e[t].payload.pull_request&&(e[t].commentMessage=e[t].payload.pull_request.title);else if("PushEvent"===e[t].type){if(e[t].message="pushed to "+e[t].payload.ref.substring(11)+" at "+e[t].repo.name,e[t].payload.commits){e[t].comments=e[t].payload.commits;for(var a=0;a<e[t].payload.commits.length;a++)e[t].comments[a].id=e[t].payload.commits[a].sha,e[t].comments[a].link=e[t].repoUrl+"/commit/"+e[t].payload.commits[a].sha,e[t].comments[a].message=e[t].payload.commits[a].message}}else if("IssueCommentEvent"===e[t].type)e[t].message="commented on issue "+e[t].repoName+"#"+e[t].payload.issue.number,e[t].payload.issue.pull_request&&(e[t].message="commented on pull request "+e[t].repoName+"#"+e[t].payload.issue.number),e[t].payload.comment&&(e[t].commentMessage=e[t].payload.comment.body);else if("IssuesEvent"===e[t].type)"closed"===e[t].payload.action&&(e[t].message="closed issue "+e[t].repoName+"#"+e[t].payload.issue.number,e[t].commentMessage=e[t].payload.issue.body);else if("DeleteEvent"===e[t].type)e[t].message="deleted "+e[t].payload.ref_type+" "+e[t].payload.ref+" at "+e[t].repoName;else if("ReleaseEvent"===e[t].type&&(e[t].message="released "+e[t].payload.release.name+" at "+e[t].repoName,e[t].payload.release.assets)){e[t].comments=e[t].payload.release.assets;for(var a=0;a<e[t].payload.release.assets.length;a++)e[t].comments[a].message=e[t].payload.release.assets[a].name}return e}function m(e,t){var i=a+"repos/"+t.path+"/"+e+"?callback=JSON_CALLBACK";return t.accessToken&&(i+="&access_token="+t.accessToken),i}function c(e,t){var i=a+"users/"+t.user+"/"+e;return t.org&&(i+="/orgs/"+t.org),i+="?callback=JSON_CALLBACK",t.accessToken&&(i+="&access_token="+t.accessToken),i}function d(e,t){var i=a+"orgs/"+t.org+"/"+e+"?callback=JSON_CALLBACK";return t.accessToken&&(i+="&access_token="+t.accessToken),i}function u(a){var i=e.defer();return t.jsonp(a).success(function(e){if(e&&e.meta){var t=e.meta.status;t<300?i.resolve(e.data):i.reject(e.data.message)}}).error(function(){i.reject()}),i.promise}var g={getCommits:s,getIssues:i,getUserEvents:r,getOrgaEvents:o,getRepoEvents:l};return g}function s(e,t){var a=this;a.issues=t}function r(e,t,a){function i(){var t={},i=e("orderBy")(a,function(e){return e.commit.author.date});angular.forEach(i,function(e){var a=e.commit.author.date;a=a.substring(0,a.indexOf("T")),t[a]?t[a]++:t[a]=1});var s=[],r={labels:[],data:[s],series:["Commits"],"class":"chart-line"};return angular.forEach(t,function(e,t){r.labels.push(t),s.push(e)}),r}var s=this;a&&(s.chart=i())}function o(e,t){var a=this;a.events=t}function l(e,t){var a=this;a.commits=t}function n(e,t){function a(){var e={};angular.forEach(t,function(t){var a=t.commit.author.name;e[a]?e[a]++:e[a]=1});var a={labels:[],data:[],series:["Commits"],"class":"chart-pie"};return angular.forEach(e,function(e,t){a.labels.push(t),a.data.push(e)}),a}var i=this;t&&(i.chart=a())}angular.module("adf.widget.github",["adf.provider","chart.js"]).value("githubApiUrl","https://api.github.com/").config(a),a.$inject=["dashboardProvider"],angular.module("adf.widget.github").run(["$templateCache",function(e){e.put("{widgetsPath}/github/src/commits.html",'<div><div ng-if=!vm.commits class="alert alert-info">Please configure the widget</div><div ng-if=config.path><ul class=media-list><li class=media ng-repeat="commit in vm.commits"><div class=media-left><a href={{commit.author.html_url}} target=_blank><img class="media-object img-thumbnail" ng-src={{commit.author.avatar_url}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{commit.html_url}} target=_blank>{{commit.sha | limitTo: 12}}</a></h4><p>{{commit.commit.message | limitTo: 128}}</p><small><a href={{commit.author.html_url}} target=_blank>{{commit.commit.author.name}}</a>, {{commit.commit.author.date | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),e.put("{widgetsPath}/github/src/edit.html",'<form role=form><div class=form-group><label for=path>Github Repository Path</label> <input type=text class=form-control id=path ng-model=config.path placeholder="Enter Path (username/reponame)"></div><div class=form-group><label for=path>Access Token</label> <input type=text class=form-control id=path ng-model=config.accessToken></div></form>'),e.put("{widgetsPath}/github/src/events.org.edit.html",'<form role=form><div class=form-group><label for=path>Organisation</label> <input type=text class=form-control id=path ng-model=config.org placeholder="Enter Organisation"></div><div class=form-group><label for=path>Access Token</label> <input type=text class=form-control id=path ng-model=config.accessToken></div></form>'),e.put("{widgetsPath}/github/src/events.org.html",'<div><div ng-if=!config.org class="alert alert-info">Please configure the widget</div><div ng-if=config.org><ul class=media-list><li class=media ng-repeat="event in vm.events"><div class=media-left><a href={{event.userUrl}} target=_blank><img class="media-object img-thumbnail" ng-src={{event.userImage}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{event.userUrl}} target=_blank>{{event.actor.login}}</a> {{event.message | limitTo: 128}}</h4><p ng-if=event.comments ng-repeat="comment in event.comments | limitTo:2"><a ng-if=comment.link href={{comment.link}}>{{comment.id | limitTo: 7}}:</a>{{comment.message | limitTo: 50}}</p><p ng-if=!event.comments>{{event.commentMessage | limitTo: 50}}</p><small><a href={{event.userUrl}} target=_blank>{{event.actor.login}}</a>, {{event.created_at | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),e.put("{widgetsPath}/github/src/events.repo.edit.html",'<form role=form><div class=form-group><label for=path>Github Repository Path</label> <input type=text class=form-control id=path ng-model=config.path placeholder="Enter Path (owner/reponame)"></div><div class=form-group><label for=path>Access Token</label> <input type=text class=form-control id=path ng-model=config.accessToken></div></form>'),e.put("{widgetsPath}/github/src/events.repo.html",'<div><div ng-if=!config.path class="alert alert-info">Please configure the widget</div><div ng-if=config.path><ul class=media-list><li class=media ng-repeat="event in vm.events"><div class=media-left><a href={{event.userUrl}} target=_blank><img class="media-object img-thumbnail" ng-src={{event.userImage}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{event.userUrl}} target=_blank>{{event.actor.login}}</a> {{event.message | limitTo: 128}}</h4><p ng-if=event.comments ng-repeat="comment in event.comments | limitTo:2"><a href={{comment.link}}>{{comment.id | limitTo: 7}}:</a>{{comment.message | limitTo: 50}}</p><p ng-if=!event.comments>{{event.commentMessage | limitTo: 50}}</p><small><a href={{event.userUrl}} target=_blank>{{event.actor.login}}</a>, {{event.created_at | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),e.put("{widgetsPath}/github/src/events.user.edit.html",'<form role=form><div class=form-group><label for=path>User Name</label> <input type=text class=form-control id=path ng-model=config.user placeholder="Enter User (username)"></div><div class=form-group><label for=path>Organisation</label> <input type=text class=form-control id=path ng-model=config.org placeholder="(Optional) Enter Organisation"></div><div class=form-group><label for=path>Access Token</label> <input type=text class=form-control id=path ng-model=config.accessToken></div></form>'),e.put("{widgetsPath}/github/src/events.user.html",'<div><div ng-if=!config.user class="alert alert-info">Please configure the widget</div><div ng-if=config.user><ul class=media-list><li class=media ng-repeat="event in vm.events"><div class=media-left><a href={{event.userUrl}} target=_blank><img class="media-object img-thumbnail" ng-src={{event.userImage}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{event.userUrl}} target=_blank>{{event.actor.login}}</a> {{event.message | limitTo: 128}}</h4><p ng-if=event.comments ng-repeat="comment in event.comments | limitTo:2"><a ng-if=comment.link href={{comment.link}}>{{comment.id | limitTo: 7}}:</a>{{comment.message | limitTo: 50}}</p><p ng-if=!event.comments>{{event.commentMessage | limitTo: 50}}</p><small><a href={{event.userUrl}} target=_blank>{{event.actor.login}}</a>, {{event.created_at | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),e.put("{widgetsPath}/github/src/issues.html",'<div><div ng-if=!config.path class="alert alert-info">Please configure the widget</div><div ng-if=config.path><ul class=media-list><li class=media ng-repeat="issue in vm.issues"><div class=media-left><a href={{issue.user.html_url}} target=_blank><img class="media-object img-thumbnail" ng-src={{issue.user.avatar_url}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{issue.html_url}} target=_blank>#{{issue.number}} {{issue.title}}</a></h4><p>{{issue.body | limitTo: 128}}</p><small><a href={{issue.user.html_url}} target=_blank>{{issue.user.login}}</a>, {{issue.created_at | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),e.put("{widgetsPath}/github/src/line-chart.html",'<div><div class="alert alert-info" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=vm.chart><canvas id=line class="chart chart-line" chart-data=vm.chart.data chart-labels=vm.chart.labels chart-series=vm.chart.series></canvas></div></div>'),e.put("{widgetsPath}/github/src/pie-chart.html",'<div><div class="alert alert-info" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=vm.chart><canvas id=pie class="chart chart-pie" chart-legend=true chart-data=vm.chart.data chart-labels=vm.chart.labels></canvas></div></div>')}]),angular.module("adf.widget.github").factory("github",i),i.$inject=["$q","$http","githubApiUrl"],angular.module("adf.widget.github").controller("GithubIssuesController",s),s.$inject=["config","issues"],angular.module("adf.widget.github").controller("GithubHistoryController",r),r.$inject=["$filter","config","commits"],angular.module("adf.widget.github").controller("GithubEventsController",o),o.$inject=["config","events"],angular.module("adf.widget.github").controller("GithubCommitsController",l),l.$inject=["config","commits"],angular.module("adf.widget.github").controller("GithubAuthorController",n),n.$inject=["config","commits"]}(window);