!function(t,i){"use strict";function e(t){var i={reload:!0,category:"GitHub",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/github/src/edit.html"}},e=angular.extend({resolve:{commits:["github","config",function(t,i){return i.path?t.getCommits(i):void 0}]}},i);t.widget("githubHistory",angular.extend({title:"Github History",description:"Display the commit history of a GitHub project as chart",controller:"GithubHistoryController",templateUrl:"{widgetsPath}/github/src/line-chart.html"},e)).widget("githubAuthor",angular.extend({title:"Github Author",description:"Displays the commits per author as pie chart",controller:"GithubAuthorController",templateUrl:"{widgetsPath}/github/src/pie-chart.html"},e)).widget("githubCommits",angular.extend({title:"Github Commits",description:"Displays the commits as list",controller:"GithubCommitsController",templateUrl:"{widgetsPath}/github/src/commits.html"},e)).widget("githubIssues",angular.extend({title:"Github Issues",description:"Displays issues as list of a GitHub project",controller:"GithubIssuesController",templateUrl:"{widgetsPath}/github/src/issues.html",resolve:{issues:function(t,i){return i.path?t.getIssues(i):void 0}}},i))}function a(t,i,e){function a(t){return l(s("issues",t))}function r(t){return l(s("commits",t))}function s(t,i){var a=e+i.path+"/"+t+"?callback=JSON_CALLBACK";return i.accessToken&&(a+="&access_token="+i.accessToken),a}function l(e){var a=t.defer();return i.jsonp(e).success(function(t){if(t&&t.meta){var i=t.meta.status;300>i?a.resolve(t.data):a.reject(t.data.message)}}).error(function(){a.reject()}),a.promise}var o={getCommits:r,getIssues:a};return o}function r(t,i){var e=this;e.issues=i}function s(t,i,e){function a(){var i={},a=t("orderBy")(e,function(t){return t.commit.author.date});angular.forEach(a,function(t){var e=t.commit.author.date;e=e.substring(0,e.indexOf("T")),i[e]?i[e]++:i[e]=1});var r=[],s={labels:[],data:[r],series:["Commits"],"class":"chart-line"};return angular.forEach(i,function(t,i){s.labels.push(i),r.push(t)}),s}var r=this;e&&(r.chart=a())}function l(t,i){var e=this;e.commits=i}function o(t,i){function e(){var t={};angular.forEach(i,function(i){var e=i.commit.author.name;t[e]?t[e]++:t[e]=1});var e={labels:[],data:[],series:["Commits"],"class":"chart-pie"};return angular.forEach(t,function(t,i){e.labels.push(i),e.data.push(t)}),e}var a=this;i&&(a.chart=e())}angular.module("adf.widget.github",["adf.provider","chart.js"]).value("githubApiUrl","https://api.github.com/repos/").config(e),e.$inject=["dashboardProvider"],angular.module("adf.widget.github").run(["$templateCache",function(t){t.put("{widgetsPath}/github/src/commits.html",'<div><div ng-if=!vm.commits class="alert alert-info">Please configure the widget</div><div ng-if=config.path><ul class=media-list><li class=media ng-repeat="commit in vm.commits"><div class=media-left><a href={{commit.author.html_url}} target=_blank><img class="media-object img-thumbnail" ng-src={{commit.author.avatar_url}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{commit.html_url}} target=_blank>{{commit.sha | limitTo: 12}}</a></h4><p>{{commit.commit.message | limitTo: 128}}</p><small><a href={{commit.author.html_url}} target=_blank>{{commit.commit.author.name}}</a>, {{commit.commit.author.date | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),t.put("{widgetsPath}/github/src/edit.html",'<form role=form><div class=form-group><label for=path>Github Repository Path</label> <input type=text class=form-control id=path ng-model=config.path placeholder="Enter Path (username/reponame)"></div><div class=form-group><label for=path>Access Token</label> <input type=text class=form-control id=path ng-model=config.accessToken></div></form>'),t.put("{widgetsPath}/github/src/issues.html",'<div><div ng-if=!config.path class="alert alert-info">Please configure the widget</div><div ng-if=config.path><ul class=media-list><li class=media ng-repeat="issue in vm.issues"><div class=media-left><a href={{issue.user.html_url}} target=_blank><img class="media-object img-thumbnail" ng-src={{issue.user.avatar_url}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{issue.html_url}} target=_blank>#{{issue.number}} {{issue.title}}</a></h4><p>{{issue.body | limitTo: 128}}</p><small><a href={{issue.user.html_url}} target=_blank>{{issue.user.login}}</a>, {{issue.created_at | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),t.put("{widgetsPath}/github/src/line-chart.html",'<div><div class="alert alert-info" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=vm.chart><canvas id=line class="chart chart-line" chart-data=vm.chart.data chart-labels=vm.chart.labels chart-series=vm.chart.series></canvas></div></div>'),t.put("{widgetsPath}/github/src/pie-chart.html",'<div><div class="alert alert-info" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=vm.chart><canvas id=pie class="chart chart-pie" chart-legend=true chart-data=vm.chart.data chart-labels=vm.chart.labels></canvas></div></div>')}]),angular.module("adf.widget.github").factory("github",a),a.$inject=["$q","$http","githubApiUrl"],angular.module("adf.widget.github").controller("GithubIssuesController",r),r.$inject=["config","issues"],angular.module("adf.widget.github").controller("GithubHistoryController",s),s.$inject=["$filter","config","commits"],angular.module("adf.widget.github").controller("GithubCommitsController",l),l.$inject=["config","commits"],angular.module("adf.widget.github").controller("GithubAuthorController",o),o.$inject=["config","commits"]}(window);