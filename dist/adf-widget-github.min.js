!function(t,i){"use strict";function e(t){var i={reload:!0,category:"GitHub",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/github/src/edit.html"}},e=angular.extend({resolve:{commits:["github","config",function(t,i){return i.path?t.getCommits(i):void 0}]}},i);t.widget("githubHistory",angular.extend({title:"Github History",description:"Display the commit history of a GitHub project as chart",controller:"GithubHistoryController",templateUrl:"{widgetsPath}/github/src/view.html"},e)).widget("githubAuthor",angular.extend({title:"Github Author",description:"Displays the commits per author as pie chart",controller:"GithubAuthorController",templateUrl:"{widgetsPath}/github/src/view.html"},e)).widget("githubCommits",angular.extend({title:"Github Commits",description:"Displays the commits as list",controller:"GithubCommitsController",templateUrl:"{widgetsPath}/github/src/commits.html"},e)).widget("githubIssues",angular.extend({title:"Github Issues",description:"Displays issues as list of a GitHub project",controller:"GithubIssuesController",templateUrl:"{widgetsPath}/github/src/issues.html",resolve:{issues:function(t,i){return i.path?t.getIssues(i):void 0}}},i))}function a(t,i,e){function a(t){return o(s("issues",t))}function r(t){return o(s("commits",t))}function s(t,i){var a=e+i.path+"/"+t+"?callback=JSON_CALLBACK";return i.accessToken&&(a+="&access_token="+i.accessToken),a}function o(e){var a=t.defer();return i.jsonp(e).success(function(t){if(t&&t.meta){var i=t.meta.status;300>i?a.resolve(t.data):a.reject(t.data.message)}}).error(function(){a.reject()}),a.promise}var l={getCommits:r,getIssues:a};return l}function r(t,i){var e=this;e.issues=i}function s(t,i){function e(t){var i=t.split("-");return Date.UTC(i[0],i[1]-1,i[2])}var a=this,r={};angular.forEach(i,function(t){var i=t.commit.author.date;i=i.substring(0,i.indexOf("T")),r[i]?r[i]++:r[i]=1});var s=[];angular.forEach(r,function(t,i){s.push([e(i),t])}),s.sort(function(t,i){return t[0]-i[0]}),i&&(a.chartConfig={chart:{type:"spline"},title:{text:"Github commit history"},xAxis:{type:"datetime"},yAxis:{title:{text:"Commits"},min:0},series:[{name:t.path,data:s}]})}function o(t,i){var e=this;e.commits=i}function l(t,i){var e=this,a={};angular.forEach(i,function(t){var i=t.commit.author.name;a[i]?a[i]++:a[i]=1});var r=[];if(angular.forEach(a,function(t,i){r.push([i,t])}),r.length>0){r.sort(function(t,i){return i[1]-t[1]});var s=r[0];r[0]={name:s[0],y:s[1],sliced:!0,selected:!0}}i&&(e.chartConfig={chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:{text:t.path},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,color:"#000000",connectorColor:"#000000",format:"<b>{point.name}</b>: {point.percentage:.1f} %"}}},series:[{type:"pie",name:t.path,data:r}]})}angular.module("adf.widget.github",["adf.provider","highcharts-ng"]).value("githubApiUrl","https://api.github.com/repos/").config(e),e.$inject=["dashboardProvider"],angular.module("adf.widget.github").run(["$templateCache",function(t){t.put("{widgetsPath}/github/src/commits.html",'<div><div ng-if=!vm.commits class="alert alert-info">Please configure the widget</div><div ng-if=config.path><ul class=media-list><li class=media ng-repeat="commit in vm.commits"><div class=media-left><a href={{commit.author.html_url}} target=_blank><img class="media-object img-thumbnail" ng-src={{commit.author.avatar_url}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{commit.html_url}} target=_blank>{{commit.sha | limitTo: 12}}</a></h4><p>{{commit.commit.message | limitTo: 128}}</p><small><a href={{commit.author.html_url}} target=_blank>{{commit.commit.author.name}}</a>, {{commit.commit.author.date | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),t.put("{widgetsPath}/github/src/edit.html",'<form role=form><div class=form-group><label for=path>Github Repository Path</label> <input type=text class=form-control id=path ng-model=config.path placeholder="Enter Path (username/reponame)"></div><div class=form-group><label for=path>Access Token</label> <input type=text class=form-control id=path ng-model=config.accessToken></div></form>'),t.put("{widgetsPath}/github/src/issues.html",'<div><div ng-if=!config.path class="alert alert-info">Please configure the widget</div><div ng-if=config.path><ul class=media-list><li class=media ng-repeat="issue in vm.issues"><div class=media-left><a href={{issue.user.html_url}} target=_blank><img class="media-object img-thumbnail" ng-src={{issue.user.avatar_url}} style="width: 64px; height: 64px;"></a></div><div class=media-body><h4 class=media-heading><a href={{issue.html_url}} target=_blank>#{{issue.number}} {{issue.title}}</a></h4><p>{{issue.body | limitTo: 128}}</p><small><a href={{issue.user.html_url}} target=_blank>{{issue.user.login}}</a>, {{issue.created_at | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),t.put("{widgetsPath}/github/src/view.html",'<div><div class="alert alert-info" ng-if=!vm.chartConfig>Please insert a repository path in the widget configuration</div><div ng-if=vm.chartConfig><highchart id=chart1 config=vm.chartConfig></highchart></div></div>')}]),angular.module("adf.widget.github").factory("github",a),a.$inject=["$q","$http","githubApiUrl"],angular.module("adf.widget.github").controller("GithubIssuesController",r),r.$inject=["config","issues"],angular.module("adf.widget.github").controller("GithubHistoryController",s),s.$inject=["config","commits"],angular.module("adf.widget.github").controller("GithubCommitsController",o),o.$inject=["config","commits"],angular.module("adf.widget.github").controller("GithubAuthorController",l),l.$inject=["config","commits"]}(window);